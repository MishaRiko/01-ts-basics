{"version":3,"file":"index.js","sources":["../src/task-1.ts","../src/task-2.ts","../src/task-3.ts","../src/task-4.ts","../src/task-5.ts","../src/task-6.ts","../src/task-7.ts","../src/task-8.ts"],"sourcesContent":["export {};\nconst name: string = 'Alice';\nconst age: number = 30;\nconst isOnline: boolean = true;\n\nconsole.log(`Name: ${name}`);\nconsole.log(`Age: ${age}`);\nconsole.log(`Online: ${isOnline}`);\n","interface product {\n  readonly id: number;\n  title: string;\n  description?: string;\n}\n\nconst product: product = {\n  id: 1,\n  title: 'Tablet',\n  description: 'Compact and fast',\n};\n\nconsole.log(`Product: ${JSON.stringify(product)}`);\n","const usernames: string[] = ['alice', 'bob', 'charlie'];\n\nconst ratings: number[] = [4.5, 3.8, 5];\n\ninterface Product {\n  id: number;\n  title: string;\n}\nconst products: Product[] = [\n  { id: 1, title: 'Phone' },\n  { id: 2, title: 'Laptop' },\n];\n\nconsole.log(`Usernames: ${JSON.stringify(usernames)}`);\nconsole.log(`Ratings: ${JSON.stringify(ratings)}`);\nconsole.log(`Products: ${JSON.stringify(products)}`);\n","function printUserInfo(name: string, age: number, email?: string): void {\n  console.log('Name:', name);\n  console.log('Age:', age);\n  if (email) {\n    console.log('Email:', email);\n  }\n}\n\nprintUserInfo('Alice', 30);\nprintUserInfo('Bob', 25, 'bob@mail.com');\n","type status1 = 'loading' | 'success' | 'error';\nfunction logStatus(status: status1): void {\n  if (status === 'loading') {\n    console.log('Loading...');\n  } else if (status === 'success') {\n    console.log('Success!');\n  } else if (status === 'error') {\n    console.log('Something went wrong');\n  }\n}\n\nlogStatus('loading');\n","function getFirstElement<T>(arr: T[]): T {\n  return arr[0];\n}\n\ngetFirstElement<number>([1, 2, 3]); // 1\ngetFirstElement<string>(['a', 'b', 'c']); // \"a\"\ngetFirstElement<boolean>([true, false, true]); // true\n","function getMessage(): Promise<string> {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve('Hello from TS');\n    }, 1000);\n  });\n}\n\ngetMessage().then(result => console.log(result));\n","import axios from 'axios';\ninterface Post {\n  id: number;\n  title: string;\n  body: string;\n}\nasync function fetchPosts(): Promise<Post[]> {\n  const response = await axios.get<Post[]>(\n    'https://jsonplaceholder.typicode.com/posts'\n  );\n  return response.data;\n}\n\nfetchPosts().then(posts => {\n  console.log(posts[0].title);\n});\n"],"names":["name","age","isOnline","product","usernames","ratings","products","printUserInfo","email","logStatus","status","getFirstElement","arr","getMessage","resolve","result","fetchPosts","axios","posts"],"mappings":"ivBACA,MAAMA,EAAe,QACfC,EAAc,GACdC,EAAoB,GAE1B,QAAQ,IAAI,SAASF,CAAI,EAAE,EAC3B,QAAQ,IAAI,QAAQC,CAAG,EAAE,EACzB,QAAQ,IAAI,WAAWC,CAAQ,EAAE,ECDjC,MAAMC,EAAmB,CACvB,GAAI,EACJ,MAAO,SACP,YAAa,kBACf,EAEA,QAAQ,IAAI,YAAY,KAAK,UAAUA,CAAO,CAAC,EAAE,ECZjD,MAAMC,EAAsB,CAAC,QAAS,MAAO,SAAS,EAEhDC,EAAoB,CAAC,IAAK,IAAK,CAAC,EAMhCC,EAAsB,CAC1B,CAAE,GAAI,EAAG,MAAO,OAAQ,EACxB,CAAE,GAAI,EAAG,MAAO,QAAS,CAC3B,EAEA,QAAQ,IAAI,cAAc,KAAK,UAAUF,CAAS,CAAC,EAAE,EACrD,QAAQ,IAAI,YAAY,KAAK,UAAUC,CAAO,CAAC,EAAE,EACjD,QAAQ,IAAI,aAAa,KAAK,UAAUC,CAAQ,CAAC,EAAE,ECfnD,SAASC,EAAcP,EAAcC,EAAaO,EAAsB,CAC9D,QAAA,IAAI,QAASR,CAAI,EACjB,QAAA,IAAI,OAAQC,CAAG,EACnBO,GACM,QAAA,IAAI,SAAUA,CAAK,CAE/B,CAEAD,EAAc,QAAS,EAAE,EACzBA,EAAc,MAAO,GAAI,cAAc,ECRvC,SAASE,EAAUC,EAAuB,CAEtC,QAAQ,IAAI,YAAY,CAM5B,CAEAD,EAAmB,ECXnB,SAASE,EAAmBC,EAAa,CACvC,OAAOA,EAAI,CAAC,CACd,CAEAD,EAAwB,CAAC,EAAG,EAAG,CAAC,CAAC,EACjCA,EAAwB,CAAC,IAAK,IAAK,GAAG,CAAC,EACvCA,EAAyB,CAAC,GAAM,GAAO,EAAI,CAAC,ECN5C,SAASE,GAA8B,CAC9B,OAAA,IAAI,QAAmBC,GAAA,CAC5B,WAAW,IAAM,CACfA,EAAQ,eAAe,GACtB,GAAI,CAAA,CACR,CACH,CAEAD,IAAa,KAAKE,GAAU,QAAQ,IAAIA,CAAM,CAAC,ECF/C,eAAeC,GAA8B,CAI3C,OAHiB,MAAMC,EAAM,IAC3B,4CAAA,GAEc,IAClB,CAEAD,IAAa,KAAcE,GAAA,CACzB,QAAQ,IAAIA,EAAM,CAAC,EAAE,KAAK,CAC5B,CAAC"}